schema {
  query: Query
  mutation: Mutation
}

type Query {
  """
  The current peer with publishing rights on this machine.
  Kinda like the "current logged in user" on a sytem where you log in.
  """
  currentPeer: Peer!

  """
  Find a peer by their public key string.
  """
  peerByFeedId(feedId: FeedId!): Peer

  """
  Get currently connected peers.
  """
  peerConnections: [PeerConnection!]!
}

type Mutation {
  setFollowship(feedId: FeedId!, followship: Followship!): Boolean
}

"""
ssb:feed/ed25519/<FEEDID>
"""
scalar FeedId

"""
ssb:message/sha256/<MSGID>
"""
scalar MessageId

"""
ssb:blob/sha256/<BLOBID>
"""
scalar BlobId

"""
ssb:address/multiserver?multiserverAddress=<MSADDR>
"""
scalar Address

type Peer {
  """
  The public key of the peer on the SSB network.
  """
  feedId: FeedId!

  profile: Profile
}

type Profile {
  name: String
  description: String
  image: BlobId
}

enum PeerConnectionState {
  CONNECTING
  CONNECTED
  DISCONNECTING
}

type PeerConnection {
  peer: Peer!
  address: Address!

  """
  What is the status of the connection
  """
  state: PeerConnectionState

  """
  What type of peer this is.

  It can be any string, but often is either 'lan', 'bt', 'pub', 'room', 'room-endpoint', 'dht'
  """
  type: String
}

"""
An author's relationship with another author.
"""
enum Followship {
  """
  Blocking means an author does not want to see another's messages or replicate their feed.
  """
  BLOCKING

  """
  Following means an author wants to see another's messages, and replicate their feed.
  """
  FOLLOWING

  """
  Neutral means they have not followed or blocked an author.
  """
  NEUTRAL
}
