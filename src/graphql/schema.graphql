schema {
  query: Query
}

type Query {
  """
  The current peer with publishing rights on this machine.
  Kinda like the "current logged in user" on a sytem where you log in.
  """
  currentPeer: Peer!

  """
  Find a peer by their public key string.
  """
  peerByFeedId(feedId: FeedId!): Peer

  """
  Get currently connected peers.
  """
  peerConnections: [PeerConnection!]!
}

"""
ssb:feed/ed25519/<FEEDID>
"""
scalar FeedId

"""
ssb:message/sha256/<MSGID>
"""
scalar MessageId

"""
ssb:blob/sha256/<BLOBID>
"""
scalar BlobId

"""
ssb:address/multiserver?multiserverAddress=<MSADDR>
"""
scalar Address

type Peer {
  """
  The public key of the peer on the SSB network.
  """
  feedId: FeedId!

  profile: Profile
}

type Profile {
  name: String
  description: String
  image: BlobId
}

enum PeerConnectionState {
  CONNECTING
  CONNECTED
  DISCONNECTING
}

type PeerConnection {
  peer: Peer!
  address: Address!

  """
  What is the status of the connection
  """
  state: PeerConnectionState

  """
  What type of peer this is.

  It can be any string, but often is either 'lan', 'bt', 'pub', 'room', 'room-endpoint', 'dht'
  """
  type: String
}
